# version format
version: "1.0.0-{build}"

# branches to build
branches:
  # whitelist
  only:
    - master

  # blacklist
  except:
    - gh-pages

# Operating system (build VM template)
os: Windows Server 2012 R2

# environment variables
environment:
  GOPATH: c:\gopath

# do not indent -ps and leave line break the way it is!
init:
- ps: >-
    $app = Get-WmiObject -Class Win32_Product -Filter "Vendor = 'http://golang.org'"

    if ($app) {
      $app.Uninstall()
    }
- git config --global core.autocrlf input    

# scripts that run after cloning repository
install:
  - set PATH=%GOPATH%\bin;c:\go\bin;%PATH%
  - appveyor DownloadFile https://storage.googleapis.com/golang/go1.4.2.windows-amd64.msi
  - msiexec /i go1.4.2.windows-amd64.msi /q
  - go version
  - go env
  - mkdir c:\gopath
  - go get -u golang.org/x/tools/cmd/cover
  - go get -u github.com/tischda/go2xunit
  - go get -u github.com/AllenDang/w32
  - dir c:\
  - ps: curl -outfile mw64.7z "http://libgd.blob.core.windows.net/mingw/x86_64-4.9.1-release-posix-seh-rt_v3-rev1.7z";
  - ps: if((Get-FileHash mw64.7z -Algorithm SHA1).Hash -ne "91A35AE296C1A71802AB0C7228EE57F9AAC5D7C7")
        {
          echo "Invalid file hash";
          exit 1;
        };
  - ps: 7z x -oC:\ mw64.7z | out-null;
  
# to run your custom scripts instead of automatic MSBuild
build_script:
  - cd %APPVEYOR_BUILD_FOLDER%
  - SET PATH=%GOPATH%\bin;%PATH%
  - go build -o refresh.exe

# to run your custom scripts instead of automatic tests
test_script:
  - go test -v -cover
  - go test -v | go2xunit -xunitnet > xunit-report.xml
  - refresh.exe -version
  - refresh.exe

# artifacts configuration
artifacts:
  - path: refresh.exe
    name: Refresh

# to disable deployment
deploy: off

# after build failure or success
on_finish:
- ps: >-
    If (Test-Path .\xunit-report.xml) {
      (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/xunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\xunit-report.xml))
    }

